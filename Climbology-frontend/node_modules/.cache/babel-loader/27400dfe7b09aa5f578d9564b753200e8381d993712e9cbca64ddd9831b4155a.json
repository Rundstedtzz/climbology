{"ast":null,"code":"var _jsxFileName = \"/Users/ricky/Desktop/Climbology-frontend/src/components/RouteOps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport kilter_board from '../assets/kilter_board.png'; // Ensure the path is correct\nimport './RouteOps.css'; // Make sure the CSS file is named correctly and imported\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RouteOps = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    holds,\n    response\n  } = location.state || {};\n  // console.log(holds);\n  // console.log(\"response\", response);\n  // console.log(\"response.result\", response.result);\n\n  // State variables\n  const [selectedHoldId, setSelectedHoldId] = useState('');\n  const [selectedHoldProperty, setSelectedHoldProperty] = useState('');\n  const [holdValue, setHoldValue] = useState('');\n  const [selectedMoveProperty, setSelectedMoveProperty] = useState('');\n  const [moveValue, setMoveValue] = useState('');\n  const [selectedStartHoldID, setSelectedStartHoldID] = useState('');\n  const [selectedEndHoldID, setSelectedEndHoldID] = useState('');\n  const [updateHoldStatus, setUpdateHoldStatus] = useState('');\n  const [deleteHoldStatus, setDeleteHoldStatus] = useState('');\n  const [updateMoveStatus, setUpdateMoveStatus] = useState('');\n  const [deleteMoveStatus, setDeleteMoveStatus] = useState('');\n  const [outputFindHoldsByProperty, setOutputFindHoldsByProperty] = useState('');\n  const [outputFindMovesByProperty, setOutputFindMovesByProperty] = useState('');\n  const handleHoldIdChange = event => {\n    setSelectedHoldId(event.target.value);\n  };\n\n  // Function to handle the change in hold property dropdown\n  const handleHoldPropertyChange = event => {\n    setSelectedHoldProperty(event.target.value);\n  };\n\n  // Function to handle the change in hold value input\n  const handleHoldValueChange = event => {\n    setHoldValue(event.target.value);\n  };\n\n  // Function to handle the change in move property dropdown\n  const handleMovePropertyChange = event => {\n    setSelectedMoveProperty(event.target.value);\n  };\n\n  // Function to handle the change in move value input\n  const handleMoveValueChange = event => {\n    setMoveValue(event.target.value);\n  };\n\n  // Function to handle the change in start hold id dropdown\n  const handleStartHoldIDChange = event => {\n    setSelectedStartHoldID(event.target.value);\n  };\n\n  // Function to handle the change in end hold id dropdown\n  const handleEndHoldIDChange = event => {\n    setSelectedEndHoldID(event.target.value);\n  };\n\n  // Event handler for updating holds\n  const handleUpdateHold = async () => {\n    try {\n      const res = await axios.post('http://localhost:8000/routeops/update_hold/', {\n        holdId: selectedHoldId,\n        property: selectedHoldProperty,\n        value: holdValue\n      });\n      console.log(res.data); // handle the response\n      if (res.data && res.data.status === 'success') {\n        setUpdateHoldStatus(\"Update successful!\");\n      } else {\n        setUpdateHoldStatus(\"Update failed!\");\n      }\n    } catch (error) {\n      console.error(error); // handle the error\n      setUpdateHoldStatus(\"Update failed!\");\n    }\n  };\n\n  // Event handler for deleting holds\n  const handleDeleteHold = async () => {\n    try {\n      const res = await axios.post('http://localhost:8000/routeops/delete_hold/', {\n        holdId: selectedHoldId\n      });\n      console.log(res.data); // handle the response\n      // Set the delete status message based on the response\n      if (res.data && res.data.status === 'success') {\n        setDeleteHoldStatus(\"Delete successful!\");\n      } else {\n        setDeleteHoldStatus(\"Delete failed!\");\n      }\n    } catch (error) {\n      console.error(error); // handle the error\n      setDeleteHoldStatus(\"Delete failed!\");\n    }\n  };\n\n  // Event handler for updating moves\n  const handleUpdateMove = async () => {\n    try {\n      const res = await axios.post('http://localhost:8000/routeops/update_move/', {\n        startHoldId: selectedStartHoldID,\n        endHoldId: selectedEndHoldID,\n        property: selectedMoveProperty,\n        value: moveValue\n      });\n      console.log(res.data); // handle the response\n      if (res.data && res.data.status === 'success') {\n        setUpdateMoveStatus(\"Update successful!\");\n      } else {\n        setUpdateMoveStatus(\"Update failed!\");\n      }\n    } catch (error) {\n      console.error(error); // handle the error\n      setUpdateMoveStatus(\"Update failed!\");\n    }\n  };\n\n  // Event handler for deleting moves\n  const handleDeleteMove = async () => {\n    try {\n      const res = await axios.post('http://localhost:8000/routeops/delete_move/', {\n        startHoldId: selectedStartHoldID,\n        endHoldId: selectedEndHoldID\n      });\n      console.log(res.data); // handle the response\n      if (res.data && res.data.status === 'success') {\n        setDeleteMoveStatus(\"Delete successful!\");\n      } else {\n        setDeleteMoveStatus(\"Delete failed!\");\n      }\n    } catch (error) {\n      console.error(error); // handle the error\n      setDeleteMoveStatus(\"Delete failed!\");\n    }\n  };\n\n  // Event handler for finding nodes by property\n  // const handleFindHoldsByProperty = async () => {\n  //     try {\n  //         const res = await axios.post('http://localhost:8000/routeops/find_holds_by_property/', {\n  //             property: selectedHoldProperty,\n  //             value: holdValue\n  //         });\n  //         console.log(typeof(res.data));\n  //         // const x = json.loads(res.data);\n  //         console.log(json.loads(res.data));\n  //         console.log(typeof(json.loads(res.data)));\n  //         // setOutputFindHoldsByProperty(res.data.result);\n  //         // const data = await response.json(); // handle the response\n  //         // setOutputFindHoldsByProperty(data);\n  //     } catch (error) {\n  //         console.error(error); // handle the error\n  //         // setDeleteMoveStatus(\"Delete failed!\");\n  //     }\n  // };\n\n  const handleFindHoldsByProperty = async () => {\n    try {\n      const res = await axios.post('http://localhost:8000/routeops/find_holds_by_property/', {\n        property: selectedHoldProperty,\n        value: holdValue\n      });\n\n      // Log the type and content of the response data\n      console.log(typeof res.data, res.data);\n\n      // Assuming the backend sends the data in the 'result' key\n      // Update the state with the received data\n      setOutputFindHoldsByProperty(res.data.result);\n    } catch (error) {\n      console.error(error); // handle the error\n      // setDeleteMoveStatus(\"Delete failed!\");\n    }\n  };\n\n  // Event handler for finding moves by property\n  const handleFindMovesByProperty = async () => {\n    try {\n      const res = await axios.post('http://localhost:8000/routeops/find_moves_by_property/', {\n        property: selectedMoveProperty,\n        value: moveValue\n      });\n      // Log the type and content of the response data\n      console.log(typeof res.data, res.data);\n\n      // Assuming the backend sends the data in the 'result' key\n      // Update the state with the received data\n      setOutputFindMovesByProperty(res.data.result);\n    } catch (error) {\n      console.error(error); // handle the error\n      // setDeleteMoveStatus(\"Delete failed!\");\n    }\n  };\n\n  // Function to get unique keys from the holds objects\n  const getHoldKeys = () => {\n    if (holds && holds.length > 0) {\n      return Object.keys(holds[0]);\n    }\n    return [];\n  };\n  const holdKeys = getHoldKeys();\n  const getMoveKeys = () => {\n    if (response && response.result && response.result.beta && response.result.beta.length > 0) {\n      return Object.keys(response.result.beta[0]);\n    }\n    return [];\n  };\n  const moveKeys = getMoveKeys();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routeops-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Update Holds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"hold_id\",\n        className: \"hold_id\",\n        onChange: handleHoldIdChange,\n        children: holds && holds.map(hold => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: hold.id,\n          children: `Hold ID: ${hold.id}`\n        }, hold.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"hold_property\",\n        className: \"hold_property\",\n        onChange: handleHoldPropertyChange,\n        children: holdKeys.map((key, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"hold_value\",\n        className: \"hold_value\",\n        onChange: handleHoldValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit\",\n        onClick: handleUpdateHold,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this), updateHoldStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: updateHoldStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routeops-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Delete Holds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"hold_id\",\n        className: \"hold_id\",\n        onChange: handleHoldIdChange,\n        children: holds && holds.map(hold => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: hold.id,\n          children: `Hold ID: ${hold.id}`\n        }, hold.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit\",\n        onClick: handleDeleteHold,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }, this), deleteHoldStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: deleteHoldStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routeops-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Update Moves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"start_hold_id\",\n        className: \"hold_id\",\n        onChange: handleStartHoldIDChange,\n        children: holds && holds.map(hold => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: hold.id,\n          children: `Start Hold ID: ${hold.id}`\n        }, hold.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"end_hold_id\",\n        className: \"hold_id\",\n        onChange: handleEndHoldIDChange,\n        children: holds && holds.map(hold => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: hold.id,\n          children: `End Hold ID: ${hold.id}`\n        }, hold.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"move_property\",\n        className: \"move_property\",\n        onChange: handleMovePropertyChange,\n        children: moveKeys.map((key, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"move_value\",\n        className: \"move_value\",\n        onChange: handleMoveValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit\",\n        onClick: handleUpdateMove,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }, this), updateMoveStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: updateMoveStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routeops-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Delete Moves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"start_hold_id\",\n        className: \"hold_id\",\n        onChange: handleStartHoldIDChange,\n        children: holds && holds.map(hold => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: hold.id,\n          children: `Start Hold ID: ${hold.id}`\n        }, hold.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"end_hold_id\",\n        className: \"hold_id\",\n        onChange: handleEndHoldIDChange,\n        children: holds && holds.map(hold => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: hold.id,\n          children: `End Hold ID: ${hold.id}`\n        }, hold.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit\",\n        onClick: handleDeleteMove,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }, this), deleteMoveStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: deleteMoveStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routeops-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Find Holds by Property\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"hold_property\",\n        className: \"hold_property\",\n        onChange: handleHoldPropertyChange,\n        children: holdKeys.map((key, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"hold_value\",\n        className: \"hold_value\",\n        onChange: handleHoldValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit\",\n        onClick: handleFindHoldsByProperty,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: outputFindHoldsByProperty && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: outputFindHoldsByProperty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routeops-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Find Moves by Property\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"move_property\",\n        className: \"move_property\",\n        onChange: handleMovePropertyChange,\n        children: moveKeys.map((key, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"move_value\",\n        className: \"move_value\",\n        onChange: handleMoveValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit\",\n        onClick: handleFindMovesByProperty,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: outputFindMovesByProperty && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: outputFindMovesByProperty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(RouteOps, \"lVSENo3ikeb6zwFsJ0o2cfP1xJo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = RouteOps;\nexport default RouteOps;\nvar _c;\n$RefreshReg$(_c, \"RouteOps\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","kilter_board","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","RouteOps","_s","location","navigate","holds","response","state","selectedHoldId","setSelectedHoldId","selectedHoldProperty","setSelectedHoldProperty","holdValue","setHoldValue","selectedMoveProperty","setSelectedMoveProperty","moveValue","setMoveValue","selectedStartHoldID","setSelectedStartHoldID","selectedEndHoldID","setSelectedEndHoldID","updateHoldStatus","setUpdateHoldStatus","deleteHoldStatus","setDeleteHoldStatus","updateMoveStatus","setUpdateMoveStatus","deleteMoveStatus","setDeleteMoveStatus","outputFindHoldsByProperty","setOutputFindHoldsByProperty","outputFindMovesByProperty","setOutputFindMovesByProperty","handleHoldIdChange","event","target","value","handleHoldPropertyChange","handleHoldValueChange","handleMovePropertyChange","handleMoveValueChange","handleStartHoldIDChange","handleEndHoldIDChange","handleUpdateHold","res","post","holdId","property","console","log","data","status","error","handleDeleteHold","handleUpdateMove","startHoldId","endHoldId","handleDeleteMove","handleFindHoldsByProperty","result","handleFindMovesByProperty","getHoldKeys","length","Object","keys","holdKeys","getMoveKeys","beta","moveKeys","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","map","hold","id","key","index","type","onClick","_c","$RefreshReg$"],"sources":["/Users/ricky/Desktop/Climbology-frontend/src/components/RouteOps.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport kilter_board from '../assets/kilter_board.png'; // Ensure the path is correct\nimport './RouteOps.css'; // Make sure the CSS file is named correctly and imported\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst RouteOps = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const { holds, response } = location.state || {};\n    // console.log(holds);\n    // console.log(\"response\", response);\n    // console.log(\"response.result\", response.result);\n\n    // State variables\n    const [selectedHoldId, setSelectedHoldId] = useState('');\n    const [selectedHoldProperty, setSelectedHoldProperty] = useState('');\n    const [holdValue, setHoldValue] = useState('');\n    const [selectedMoveProperty, setSelectedMoveProperty] = useState('');\n    const [moveValue, setMoveValue] = useState('');\n    const [selectedStartHoldID, setSelectedStartHoldID] = useState('');\n    const [selectedEndHoldID, setSelectedEndHoldID] = useState('');\n    const [updateHoldStatus, setUpdateHoldStatus] = useState('');\n    const [deleteHoldStatus, setDeleteHoldStatus] = useState('');\n    const [updateMoveStatus, setUpdateMoveStatus] = useState('');\n    const [deleteMoveStatus, setDeleteMoveStatus] = useState('');\n    const [outputFindHoldsByProperty, setOutputFindHoldsByProperty] = useState('');\n    const [outputFindMovesByProperty, setOutputFindMovesByProperty] = useState('');\n\n\n    const handleHoldIdChange = (event) => {\n        setSelectedHoldId(event.target.value);\n    };\n\n    // Function to handle the change in hold property dropdown\n    const handleHoldPropertyChange = (event) => {\n        setSelectedHoldProperty(event.target.value);\n    };\n\n    // Function to handle the change in hold value input\n    const handleHoldValueChange = (event) => {\n        setHoldValue(event.target.value);\n    };\n\n    // Function to handle the change in move property dropdown\n    const handleMovePropertyChange = (event) => {\n        setSelectedMoveProperty(event.target.value);\n    };\n\n    // Function to handle the change in move value input\n    const handleMoveValueChange = (event) => {\n        setMoveValue(event.target.value);\n    };\n\n    // Function to handle the change in start hold id dropdown\n    const handleStartHoldIDChange = (event) => {\n        setSelectedStartHoldID(event.target.value);\n    };\n\n    // Function to handle the change in end hold id dropdown\n    const handleEndHoldIDChange = (event) => {\n        setSelectedEndHoldID(event.target.value);\n    };\n\n    // Event handler for updating holds\n    const handleUpdateHold = async () => {\n        try {\n            const res = await axios.post('http://localhost:8000/routeops/update_hold/', { \n                holdId: selectedHoldId, \n                property: selectedHoldProperty, \n                value: holdValue \n            });\n            console.log(res.data); // handle the response\n            if (res.data && res.data.status === 'success') {\n                setUpdateHoldStatus(\"Update successful!\");\n            } else {\n                setUpdateHoldStatus(\"Update failed!\");\n            }\n        } catch (error) {\n            console.error(error); // handle the error\n            setUpdateHoldStatus(\"Update failed!\");\n        }\n    };\n\n    // Event handler for deleting holds\n    const handleDeleteHold = async () => {\n        try {\n            const res = await axios.post('http://localhost:8000/routeops/delete_hold/', {\n                holdId: selectedHoldId\n            });\n            console.log(res.data); // handle the response\n            // Set the delete status message based on the response\n            if (res.data && res.data.status === 'success') {\n                setDeleteHoldStatus(\"Delete successful!\");\n            } else {\n                setDeleteHoldStatus(\"Delete failed!\");\n            }\n        } catch (error) {\n            console.error(error); // handle the error\n            setDeleteHoldStatus(\"Delete failed!\");\n        }\n    };\n\n    // Event handler for updating moves\n    const handleUpdateMove = async () => {\n        try {\n            const res = await axios.post('http://localhost:8000/routeops/update_move/', {\n                startHoldId: selectedStartHoldID,\n                endHoldId: selectedEndHoldID,\n                property: selectedMoveProperty,\n                value: moveValue\n            });\n            console.log(res.data); // handle the response\n            if (res.data && res.data.status === 'success') {\n                setUpdateMoveStatus(\"Update successful!\");\n            } else {\n                setUpdateMoveStatus(\"Update failed!\");\n            }\n        } catch (error) {\n            console.error(error); // handle the error\n            setUpdateMoveStatus(\"Update failed!\");\n        }\n    };\n\n    // Event handler for deleting moves\n    const handleDeleteMove = async () => {\n        try {\n            const res = await axios.post('http://localhost:8000/routeops/delete_move/', {\n                startHoldId: selectedStartHoldID,\n                endHoldId: selectedEndHoldID\n            });\n            console.log(res.data); // handle the response\n            if (res.data && res.data.status === 'success') {\n                setDeleteMoveStatus(\"Delete successful!\");\n            } else {\n                setDeleteMoveStatus(\"Delete failed!\");\n            }\n        } catch (error) {\n            console.error(error); // handle the error\n            setDeleteMoveStatus(\"Delete failed!\");\n        }\n    };\n\n    // Event handler for finding nodes by property\n    // const handleFindHoldsByProperty = async () => {\n    //     try {\n    //         const res = await axios.post('http://localhost:8000/routeops/find_holds_by_property/', {\n    //             property: selectedHoldProperty,\n    //             value: holdValue\n    //         });\n    //         console.log(typeof(res.data));\n    //         // const x = json.loads(res.data);\n    //         console.log(json.loads(res.data));\n    //         console.log(typeof(json.loads(res.data)));\n    //         // setOutputFindHoldsByProperty(res.data.result);\n    //         // const data = await response.json(); // handle the response\n    //         // setOutputFindHoldsByProperty(data);\n    //     } catch (error) {\n    //         console.error(error); // handle the error\n    //         // setDeleteMoveStatus(\"Delete failed!\");\n    //     }\n    // };\n\n    const handleFindHoldsByProperty = async () => {\n        try {\n            const res = await axios.post('http://localhost:8000/routeops/find_holds_by_property/', {\n                property: selectedHoldProperty,\n                value: holdValue\n            });\n    \n            // Log the type and content of the response data\n            console.log(typeof(res.data), res.data);\n    \n            // Assuming the backend sends the data in the 'result' key\n            // Update the state with the received data\n            setOutputFindHoldsByProperty(res.data.result);\n        } catch (error) {\n            console.error(error); // handle the error\n            // setDeleteMoveStatus(\"Delete failed!\");\n        }\n    };\n    \n\n\n\n\n\n\n    \n    // Event handler for finding moves by property\n    const handleFindMovesByProperty = async () => {\n        try {\n            const res = await axios.post('http://localhost:8000/routeops/find_moves_by_property/', {\n                property: selectedMoveProperty,\n                value: moveValue\n            });\n            // Log the type and content of the response data\n            console.log(typeof(res.data), res.data);\n    \n            // Assuming the backend sends the data in the 'result' key\n            // Update the state with the received data\n            setOutputFindMovesByProperty(res.data.result);\n        } catch (error) {\n            console.error(error); // handle the error\n            // setDeleteMoveStatus(\"Delete failed!\");\n        }\n    };\n\n\n    // Function to get unique keys from the holds objects\n    const getHoldKeys = () => {\n        if (holds && holds.length > 0) {\n            return Object.keys(holds[0]);\n        }\n        return [];\n    };\n\n    const holdKeys = getHoldKeys();\n\n\n    const getMoveKeys = () => {\n        if (response && response.result && response.result.beta && response.result.beta.length > 0) {\n            return Object.keys(response.result.beta[0]);\n        }\n        return [];\n    }\n\n    const moveKeys = getMoveKeys();\n\n\n    return (\n        <>\n        {/* Update Holds */}\n        <div className=\"routeops-container\">\n            <h1>Update Holds</h1>\n            <select name=\"hold_id\" className=\"hold_id\" onChange={handleHoldIdChange}>\n                {holds && holds.map(hold => (\n                    <option key={hold.id} value={hold.id}>\n                        {`Hold ID: ${hold.id}`}\n                    </option>\n                ))}\n            </select>\n            <select name=\"hold_property\" className=\"hold_property\" onChange={handleHoldPropertyChange}>\n                {holdKeys.map((key, index) => (\n                    <option key={index} value={key}>\n                        {key}\n                    </option>\n                ))}\n            </select>\n            <input type=\"text\" name=\"hold_value\" className=\"hold_value\" onChange={handleHoldValueChange}/>\n            <button type=\"submit\" className=\"submit\" onClick={handleUpdateHold}>Confirm</button>\n            {updateHoldStatus && <p>{updateHoldStatus}</p >}\n        </div>\n\n        {/* Delete Holds */}\n        <div className=\"routeops-container\">\n            <h1>Delete Holds</h1>\n            <select name=\"hold_id\" className=\"hold_id\" onChange = {handleHoldIdChange}>\n                {holds && holds.map(hold => (\n                    <option key={hold.id} value={hold.id}>\n                        {`Hold ID: ${hold.id}`}\n                    </option>\n                ))}\n            </select>\n            <button type=\"submit\" className=\"submit\" onClick={handleDeleteHold}>Confirm</button>\n            {deleteHoldStatus && <p>{deleteHoldStatus}</p >}\n        </div>\n\n        {/* Update Moves */}\n        <div className=\"routeops-container\">\n            <h1>Update Moves</h1>\n            <select name = \"start_hold_id\" className='hold_id' onChange = {handleStartHoldIDChange}>\n                {holds && holds.map(hold => (\n                    <option key={hold.id} value={hold.id}>\n                        {`Start Hold ID: ${hold.id}`}\n                    </option>\n                ))}\n            </select>\n            <select name = \"end_hold_id\" className='hold_id' onChange = {handleEndHoldIDChange}>\n                {holds && holds.map(hold => (\n                    <option key={hold.id} value={hold.id}>\n                        {`End Hold ID: ${hold.id}`}\n                    </option>\n                ))}\n            </select>\n            <select name=\"move_property\" className=\"move_property\" onChange={handleMovePropertyChange}>\n                {moveKeys.map((key, index) => (\n                    <option key={index} value={key}>\n                        {key}\n                    </option>\n                ))}\n            </select>\n            <input type=\"text\" name=\"move_value\" className=\"move_value\" onChange = {handleMoveValueChange}/>\n            <button type=\"submit\" className=\"submit\" onClick={handleUpdateMove}>Confirm</button>\n            {updateMoveStatus && <p>{updateMoveStatus}</p >}\n        </div>\n\n        {/* Delete Moves */}\n        <div className=\"routeops-container\">\n            <h1>Delete Moves</h1>\n            <select name = \"start_hold_id\" className='hold_id' onChange = {handleStartHoldIDChange}>\n                {holds && holds.map(hold => (\n                    <option key={hold.id} value={hold.id}>\n                        {`Start Hold ID: ${hold.id}`}\n                    </option>\n                ))}\n            </select>\n            <select name = \"end_hold_id\" className='hold_id' onChange = {handleEndHoldIDChange}>\n                {holds && holds.map(hold => (\n                    <option key={hold.id} value={hold.id}>\n                        {`End Hold ID: ${hold.id}`}\n                    </option>\n                ))}\n            </select>\n            <button type=\"submit\" className=\"submit\" onClick={handleDeleteMove}>Confirm</button>\n            {deleteMoveStatus && <p>{deleteMoveStatus}</p >}\n        </div>\n\n        {/* Find Holds by Property */}\n        <div className=\"routeops-container\">\n            <h1>Find Holds by Property</h1>\n            <select name=\"hold_property\" className=\"hold_property\" onChange = {handleHoldPropertyChange}>\n                {holdKeys.map((key, index) => (\n                    <option key={index} value={key}>\n                        {key}\n                    </option>\n                ))}\n            </select>\n            <input type=\"text\" name=\"hold_value\" className=\"hold_value\" onChange = {handleHoldValueChange}/>\n            <button type=\"submit\" className=\"submit\" onClick={handleFindHoldsByProperty}>Confirm</button>\n            {/* Display the holds */}\n            <div>{outputFindHoldsByProperty && <p>{outputFindHoldsByProperty}</p >}</div>\n            {/* {outputFindHoldsByProperty && (\n                <ul>\n                    {outputFindHoldsByProperty.map((hold, index) => (\n                        <li key={index}>\n                            {Object.entries(hold).map(([key, value]) => (\n                                <span key={key}>{key}: {value.toString()}, </span>\n                            ))}\n                        </li>\n                    ))}\n                </ul>\n            )} */}\n\n        </div>\n\n        {/* Find Moves by Property */}\n        <div className=\"routeops-container\">\n            <h1>Find Moves by Property</h1>\n            <select name=\"move_property\" className=\"move_property\" onChange = {handleMovePropertyChange}>\n                {moveKeys.map((key, index) => (\n                    <option key={index} value={key}>\n                        {key}\n                    </option>\n                ))}\n            </select>\n            <input type=\"text\" name=\"move_value\" className=\"move_value\" onChange = {handleMoveValueChange}/>\n            <button type=\"submit\" className=\"submit\" onClick={handleFindMovesByProperty}>Confirm</button>\n            <div>{outputFindMovesByProperty && <p>{outputFindMovesByProperty}</p >}</div>\n        </div>\n        </>\n    );\n}\n\nexport default RouteOps;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}